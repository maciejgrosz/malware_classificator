{
    "path": "/Users/maciejgroszyk/master-thesis/extract_data/capa-testfiles-master/2f7f5fb5de175e770d7eae87666f9831.elf_",
    "md5": "2f7f5fb5de175e770d7eae87666f9831",
    "sha1": "7f751ed078b431cb82a71584a48e7ef065264e81",
    "sha256": "64b9584e5ca7d5c4980bd72e63718b634a8912d4dc123de940db36dd111931ae",
    "os": "linux",
    "data_size": 1344789,
    "code_size": 3319123,
    "code_data_ratio": 0.7116607260171289,
    "function_count": 7175,
    "export_count": 1,
    "import_count": 1,
    "sections": {
        "segment_0.1": {
            "start": 4194304,
            "end": 4194815,
            "size": 512
        },
        ".note.gnu.build-id": {
            "start": 4194816,
            "end": 4194851,
            "size": 36
        },
        ".note.ABI-tag": {
            "start": 4194852,
            "end": 4194883,
            "size": 32
        },
        ".rela.plt": {
            "start": 4194888,
            "end": 4195847,
            "size": 960
        },
        ".init": {
            "start": 4198400,
            "end": 4198426,
            "size": 27
        },
        ".plt": {
            "start": 4198432,
            "end": 4198751,
            "size": 320
        },
        ".text": {
            "start": 4198784,
            "end": 7508986,
            "size": 3310203
        },
        "__libc_freeres_fn": {
            "start": 7508992,
            "end": 7517551,
            "size": 8560
        },
        ".fini": {
            "start": 7517552,
            "end": 7517564,
            "size": 13
        },
        ".rodata": {
            "start": 7520256,
            "end": 7775643,
            "size": 255388
        },
        ".stapsdt.base": {
            "start": 7775644,
            "end": 7775644,
            "size": 1
        },
        ".eh_frame": {
            "start": 7775648,
            "end": 8142543,
            "size": 366896
        },
        ".gcc_except_table": {
            "start": 8142544,
            "end": 8178382,
            "size": 35839
        },
        ".tdata": {
            "start": 8185264,
            "end": 8185375,
            "size": 112
        },
        ".preinit_array": {
            "start": 8185376,
            "end": 8185383,
            "size": 8
        },
        ".init_array": {
            "start": 8185384,
            "end": 8185695,
            "size": 312
        },
        ".fini_array": {
            "start": 8185696,
            "end": 8185719,
            "size": 24
        },
        ".data.rel.ro": {
            "start": 8185728,
            "end": 8236643,
            "size": 50916
        },
        ".got": {
            "start": 8236648,
            "end": 8237031,
            "size": 384
        },
        ".got.plt": {
            "start": 8237056,
            "end": 8237399,
            "size": 344
        },
        ".data": {
            "start": 8237408,
            "end": 8250347,
            "size": 12940
        },
        "__libc_subfreeres": {
            "start": 8250352,
            "end": 8250511,
            "size": 160
        },
        "__libc_IO_vtables": {
            "start": 8250528,
            "end": 8252807,
            "size": 2280
        },
        "__libc_atexit": {
            "start": 8252808,
            "end": 8252815,
            "size": 8
        },
        ".comment": {
            "start": 0,
            "end": 77,
            "size": 78
        },
        ".note.stapsdt": {
            "start": 0,
            "end": 7923,
            "size": 7924
        },
        ".shstrtab": {
            "start": 0,
            "end": 322,
            "size": 323
        },
        "_elfSectionHeaders": {
            "start": 0,
            "end": 1919,
            "size": 1920
        }
    },
    "calculate modulo 256 via x86 assembly": 3,
    "encode data using XOR": 76,
    "execute syscall instruction": 17,
    "contain loop": 1822,
    "generate random numbers using a Mersenne Twister": 1,
    "manually build AES constants": 1,
    "encrypt data using RC4 PRGA": 12,
    "parse credit card information": 3,
    "hash data using SHA256": 2,
    "reference AES constants": 1,
    "encrypt data using AES": 1,
    "encrypt data using AES via x86 extensions": 23,
    "decrypt data using AES via x86 extensions": 4,
    "hash data using SHA512": 5,
    "encode data using Base64": 9,
    "hash data using djb2": 1,
    "reference cryptocurrency strings": 1,
    "reference Base64 string": 1
}